{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport { NavLink, Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport HomeScreen from '../home_screen/HomeScreen';\n\nvar addCard = require('./../../images/Add.png');\n\nclass ListScreen extends Component {\n  constructor() {}\n\n  componentDidMount() {\n    document.getElementById('list_delete_list').addEventListener(\"click\", () => this.deleteList());\n    document.getElementById('list_cancel_delete_list').addEventListener(\"click\", () => this.hideDeleteDialog());\n  }\n\n  render() {\n    const auth = this.props.auth;\n    const todoList = this.props.todoList;\n\n    if (!auth.uid) {\n      return React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: HomeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container white row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Todo List\", React.createElement(\"div\", {\n      className: \"right\",\n      onClick: () => this.showDeleteDialog(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\uD83D\\uDDD1\")), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"active\",\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.handleChange,\n      onBlur: this.changeName,\n      defaultValue: todoList.name,\n      ref: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"owner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Owner\"), React.createElement(\"input\", {\n      className: \"active\",\n      type: \"text\",\n      name: \"owner\",\n      id: \"owner\",\n      onChange: this.handleChange,\n      onBlur: this.changeOwner,\n      defaultValue: todoList.owner,\n      ref: \"owner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s3\",\n      onClick: this.sortItemsByTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"div\", {\n      className: \"col s3\",\n      onClick: this.sortItemsByDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Due Date\"), React.createElement(\"div\", {\n      className: \"col s3\",\n      onClick: this.sortItemsByStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Status\")), React.createElement(ItemsList, {\n      todoList: todoList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: '/todoList/' + todoList.id + '/newItem',\n      key: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: addCard,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todoLists = state.firestore.data.todoLists;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n  return {\n    todoList,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ListScreen);","map":{"version":3,"sources":["/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/list_screen/ListScreen.js"],"names":["React","Component","NavLink","Route","Link","connect","compose","ItemsList","firestoreConnect","HomeScreen","addCard","require","ListScreen","constructor","componentDidMount","document","getElementById","addEventListener","deleteList","hideDeleteDialog","render","auth","props","todoList","uid","showDeleteDialog","handleChange","changeName","name","changeOwner","owner","sortItemsByTask","sortItemsByDueDate","sortItemsByStatus","id","mapStateToProps","state","ownProps","match","params","todoLists","firestore","data","firebase","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink, Route, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js'\nimport { firestoreConnect } from 'react-redux-firebase';\n\nimport HomeScreen from '../home_screen/HomeScreen';\n\nvar addCard = require('./../../images/Add.png');\n\nclass ListScreen extends Component {\n\n    constructor(){\n        \n    }\n\n    state = {\n        name: '',\n        owner: '',\n    }\n\n    handleChange = (e) => {\n        const { target } = e;\n\n        this.setState(state => ({\n            ...state,\n            [target.id]: target.value,\n        }));\n    }\n\n    changeName = () => {\n        var listName = this.refs.name.value\n\n        if (listName === '') {\n            listName = '(No Name)'\n        }\n\n        this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n            name: listName\n        });\n    }\n\n    changeOwner = () => {\n        var listOwner = this.refs.owner.value\n\n        if (listOwner === '') {\n            listOwner = '(No Owner)'\n        }\n\n        this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n            owner: listOwner\n        });\n    }\n\n    deleteList = () => {\n        this.props.firestore.collection('todoLists').doc(this.props.todoList.id).delete();\n        this.props.history.push('/');\n\n        this.hideDeleteDialog();\n    }\n\n    showDeleteDialog = () => {\n        if (document.getElementById('modal_yes_no_dialog_background_hide')) {\n            document.getElementById('modal_yes_no_dialog_background_hide').id = 'modal_yes_no_dialog_background_show';\n        }\n    }\n\n    hideDeleteDialog = () => {\n        let element = document.getElementById('modal_yes_no_dialog_background_show');\n\n        if (element) {\n            element.id = 'modal_yes_no_dialog_background_hide';\n        }\n    }\n\n    componentDidMount() {\n        document.getElementById('list_delete_list').addEventListener(\"click\", () => this.deleteList());\n        document.getElementById('list_cancel_delete_list').addEventListener(\"click\", () => this.hideDeleteDialog());\n    }\n\n    render() {\n        const auth = this.props.auth;\n        const todoList = this.props.todoList;\n        if (!auth.uid) {\n            return <Route exact path=\"/\" component={HomeScreen} />\n        }\n\n        return (\n            <div className=\"container white row\">\n                <h5 className=\"grey-text text-darken-3\">Todo List\n                    <div className=\"right\" onClick={() => this.showDeleteDialog()}>&#128465;</div>\n                </h5>\n                <div className=\"input-field col s6\">\n                    <label className=\"active\" htmlFor=\"name\">Name</label>\n                    <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} onBlur={this.changeName} defaultValue={todoList.name} ref=\"name\" />\n                </div>\n                <div className=\"input-field col s6\">\n                    <label className=\"active\" htmlFor=\"owner\">Owner</label>\n                    <input className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.handleChange} onBlur={this.changeOwner} defaultValue={todoList.owner} ref=\"owner\" />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s3\" onClick={this.sortItemsByTask}>Task</div>\n                    <div className=\"col s3\" onClick={this.sortItemsByDueDate}>Due Date</div>\n                    <div className=\"col s3\" onClick={this.sortItemsByStatus}>Status</div>\n                </div>\n                <ItemsList todoList={todoList} />\n                <Link to={'/todoList/' + todoList.id + '/newItem'} key={-1}>\n                    <div className='center'>\n                        <img src={addCard} alt=\"\" />\n                    </div>\n                </Link>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    todoList.id = id;\n\n    return {\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ListScreen);"]},"metadata":{},"sourceType":"module"}