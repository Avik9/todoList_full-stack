{"ast":null,"code":"import _defineProperty from \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/list_screen/ListScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nvar addCard = require('./../../images/Add.png');\n\nclass ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      owner: ''\n    };\n\n    this.handleChange = e => {\n      const target = e.target;\n      this.setState(state => _objectSpread({}, state, {\n        [target.id]: target.value\n      }));\n    };\n\n    this.createListItemCard = () => {\n      console.log(\"Creating a new item\");\n      var newCard = {\n        description: \"No Description\",\n        assigned_to: \"No Assigned to\",\n        due_date: \"\",\n        completed: true\n      };\n      console.log(\"New Card: \" + newCard);\n      console.log(this.props.todoList.add(newCard));\n    };\n  }\n\n  render() {\n    const auth = this.props.auth;\n    const todoList = this.props.todoList;\n\n    if (!auth.uid) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Todo List\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"active\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"active\",\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.handleChange,\n      value: todoList.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"active\",\n      htmlFor: \"owner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Owner\"), React.createElement(\"input\", {\n      className: \"active\",\n      type: \"text\",\n      name: \"owner\",\n      id: \"owner\",\n      onChange: this.handleChange,\n      value: todoList.owner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(ItemsList, {\n      todoList: todoList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"center\",\n      onClick: this.createListItemCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: addCard,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todoLists = state.firestore.data.todoLists;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n  return {\n    todoList,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ListScreen);","map":{"version":3,"sources":["/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/list_screen/ListScreen.js"],"names":["React","Component","Redirect","connect","compose","ItemsList","firestoreConnect","addCard","require","ListScreen","state","name","owner","handleChange","e","target","setState","id","value","createListItemCard","console","log","newCard","description","assigned_to","due_date","completed","props","todoList","add","render","auth","uid","mapStateToProps","ownProps","match","params","todoLists","firestore","data","firebase","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js'\nimport { firestoreConnect } from 'react-redux-firebase';\n\nvar addCard = require('./../../images/Add.png');\n\nclass ListScreen extends Component {\n    state = {\n        name: '',\n        owner: '',\n    }\n\n    handleChange = (e) => {\n        const { target } = e;\n\n        this.setState(state => ({\n            ...state,\n            [target.id]: target.value,\n        }));\n    }\n\n    createListItemCard = () => {\n        console.log(\"Creating a new item\");\n        var newCard = {\n            description: \"No Description\",\n            assigned_to: \"No Assigned to\",\n            due_date: \"\",\n            completed: true,\n\n        }\n        console.log(\"New Card: \" + newCard);\n        console.log(this.props.todoList.add(newCard));\n    }\n\n    render() {\n        const auth = this.props.auth;\n        const todoList = this.props.todoList;\n        if (!auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <div className=\"container white\">\n                <h5 className=\"grey-text text-darken-3\">Todo List</h5>\n                <div className=\"input-field\">\n                    <label class=\"active\" htmlFor=\"name\">Name</label>\n                    <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} value={todoList.name} />\n                </div>\n                <div className=\"input-field\">\n                    <label class=\"active\" htmlFor=\"owner\">Owner</label>\n                    <input className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.handleChange} value={todoList.owner} />\n                </div>\n                <ItemsList todoList={todoList} />\n                <div className='center' onClick={this.createListItemCard}>\n                    <img src={addCard} alt=\"\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    todoList.id = id;\n\n    return {\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ListScreen);"]},"metadata":{},"sourceType":"module"}