{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: null,\n      itemNum: -1\n    };\n  }\n\n  //             this.props.todoList.items[this.props.itemNum].description)\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"div\", {\n      id: \"item_name_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"description_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: itemToLoad.description,\n      id: \"item_description_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"assigned_to_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"assigned_to_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Assigned To:\"), React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: itemToLoad.assigned_to,\n      id: \"assigned_to_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"due_date_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"due_date_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Due Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      defaultValue: itemToLoad.due_date,\n      id: \"due_date_dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"completed_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"completed_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: itemToLoad.completed,\n      id: \"completed_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_submit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"list_submit_list\",\n      onClick: this.submitItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      id: \"list_cancel_submit_list\",\n      onClick: this.cancelItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Cancel\"))); // if (this.props.currentItem) {\n    //     let itemToLoad = this.props.currentItem;\n    //     return (\n    // <div id='todo_item'>\n    //     <div id=\"item_container\">Item</div>\n    //     <div id=\"item_name_container\" class=\"text_toolbar\">\n    //         <span id=\"description_prompt\">Description:</span>\n    //         <input type=\"text\" defaultValue={itemToLoad.description} id=\"item_description_textfield\" />\n    //     </div>\n    //     <div id=\"assigned_to_container\" class=\"text_toolbar\">\n    //         <span id=\"assigned_to_prompt\">Assigned To:</span>\n    //         <input type=\"text\" defaultValue={itemToLoad.assigned_to} id=\"assigned_to_textfield\" />\n    //     </div>\n    //     <div id=\"due_date_container\" class=\"text_toolbar\">\n    //         <span id=\"due_date_prompt\">Due Date:</span>\n    //         <input type=\"date\" defaultValue={itemToLoad.due_date} id=\"due_date_dropdown\" />\n    //     </div>\n    //     <div id=\"completed_container\" class=\"text_toolbar\">\n    //         <span id=\"completed_prompt\">Completed:</span>\n    //         <input type=\"checkbox\" defaultChecked={itemToLoad.completed} id=\"completed_checkbox\" />\n    //     </div>\n    //     <div id=\"list_submit_buttons\">\n    //         <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n    //         <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n    //     </div>\n    // </div>\n    //     )\n    // }\n    // else {\n    //     return (\n    //         <div id='todo_item'>\n    //             <div id=\"item_container\">Item</div>\n    //             <div id=\"item_name_container\" class=\"text_toolbar\">\n    //                 <span id=\"description_prompt\">Description:</span>\n    //                 <input type=\"text\" defaultValue={\"\"} id=\"item_description_textfield\" />\n    //             </div>\n    //             <div id=\"assigned_to_container\" class=\"text_toolbar\">\n    //                 <span id=\"assigned_to_prompt\">Assigned To:</span>\n    //                 <input type=\"text\" defaultValue={\"\"} id=\"assigned_to_textfield\" />\n    //             </div>\n    //             <div id=\"due_date_container\" class=\"text_toolbar\">\n    //                 <span id=\"due_date_prompt\">Due Date:</span>\n    //                 <input type=\"date\" defaultValue={\"\"} id=\"due_date_dropdown\" />\n    //             </div>\n    //             <div id=\"completed_container\" class=\"text_toolbar\">\n    //                 <span id=\"completed_prompt\">Completed:</span>\n    //                 <input type=\"checkbox\" defaultChecked={false} id=\"completed_checkbox\" />\n    //             </div>\n    //             <div id=\"list_submit_buttons\">\n    //                 <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n    //                 <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todoLists = state.firestore.data.todoLists;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n  const itemNum = ownProps.match.params.key;\n  return {\n    itemNum,\n    todoList,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ItemScreen);","map":{"version":3,"sources":["/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/item_screen/ItemScreen.js"],"names":["React","Component","connect","compose","firestoreConnect","ItemScreen","state","todoList","itemNum","render","itemToLoad","description","assigned_to","due_date","completed","submitItemChanges","cancelItemChanges","mapStateToProps","ownProps","id","match","params","todoLists","firestore","data","key","auth","firebase","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nexport class ItemScreen extends Component {\n    state = {\n        todoList: null,\n        itemNum: -1\n    }\n    //             this.props.todoList.items[this.props.itemNum].description)\n    render() {\n        return (\n            <div id='todo_item'>\n                <div id=\"item_container\">Item</div>\n                <div id=\"item_name_container\" class=\"text_toolbar\">\n                    <span id=\"description_prompt\">Description:</span>\n                    <input type=\"text\" defaultValue={itemToLoad.description} id=\"item_description_textfield\" />\n                </div>\n                <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                    <span id=\"assigned_to_prompt\">Assigned To:</span>\n                    <input type=\"text\" defaultValue={itemToLoad.assigned_to} id=\"assigned_to_textfield\" />\n                </div>\n                <div id=\"due_date_container\" class=\"text_toolbar\">\n                    <span id=\"due_date_prompt\">Due Date:</span>\n                    <input type=\"date\" defaultValue={itemToLoad.due_date} id=\"due_date_dropdown\" />\n                </div>\n                <div id=\"completed_container\" class=\"text_toolbar\">\n                    <span id=\"completed_prompt\">Completed:</span>\n                    <input type=\"checkbox\" defaultChecked={itemToLoad.completed} id=\"completed_checkbox\" />\n                </div>\n                <div id=\"list_submit_buttons\">\n                    <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n                    <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n                </div>\n            </div>\n        )\n        // if (this.props.currentItem) {\n        //     let itemToLoad = this.props.currentItem;\n        //     return (\n        // <div id='todo_item'>\n        //     <div id=\"item_container\">Item</div>\n        //     <div id=\"item_name_container\" class=\"text_toolbar\">\n        //         <span id=\"description_prompt\">Description:</span>\n        //         <input type=\"text\" defaultValue={itemToLoad.description} id=\"item_description_textfield\" />\n        //     </div>\n        //     <div id=\"assigned_to_container\" class=\"text_toolbar\">\n        //         <span id=\"assigned_to_prompt\">Assigned To:</span>\n        //         <input type=\"text\" defaultValue={itemToLoad.assigned_to} id=\"assigned_to_textfield\" />\n        //     </div>\n        //     <div id=\"due_date_container\" class=\"text_toolbar\">\n        //         <span id=\"due_date_prompt\">Due Date:</span>\n        //         <input type=\"date\" defaultValue={itemToLoad.due_date} id=\"due_date_dropdown\" />\n        //     </div>\n        //     <div id=\"completed_container\" class=\"text_toolbar\">\n        //         <span id=\"completed_prompt\">Completed:</span>\n        //         <input type=\"checkbox\" defaultChecked={itemToLoad.completed} id=\"completed_checkbox\" />\n        //     </div>\n        //     <div id=\"list_submit_buttons\">\n        //         <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n        //         <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n        //     </div>\n        // </div>\n        //     )\n        // }\n        // else {\n        //     return (\n        //         <div id='todo_item'>\n        //             <div id=\"item_container\">Item</div>\n        //             <div id=\"item_name_container\" class=\"text_toolbar\">\n        //                 <span id=\"description_prompt\">Description:</span>\n        //                 <input type=\"text\" defaultValue={\"\"} id=\"item_description_textfield\" />\n        //             </div>\n        //             <div id=\"assigned_to_container\" class=\"text_toolbar\">\n        //                 <span id=\"assigned_to_prompt\">Assigned To:</span>\n        //                 <input type=\"text\" defaultValue={\"\"} id=\"assigned_to_textfield\" />\n        //             </div>\n        //             <div id=\"due_date_container\" class=\"text_toolbar\">\n        //                 <span id=\"due_date_prompt\">Due Date:</span>\n        //                 <input type=\"date\" defaultValue={\"\"} id=\"due_date_dropdown\" />\n        //             </div>\n        //             <div id=\"completed_container\" class=\"text_toolbar\">\n        //                 <span id=\"completed_prompt\">Completed:</span>\n        //                 <input type=\"checkbox\" defaultChecked={false} id=\"completed_checkbox\" />\n        //             </div>\n        //             <div id=\"list_submit_buttons\">\n        //                 <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n        //                 <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n        //             </div>\n        //         </div>\n        //     )\n        // }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    todoList.id = id;\n    const itemNum = ownProps.match.params.key;\n\n    return {\n        itemNum,\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemScreen);"]},"metadata":{},"sourceType":"module"}