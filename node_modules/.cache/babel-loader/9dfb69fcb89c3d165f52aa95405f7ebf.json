{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Checkbox } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitItemChanges = () => {\n      var currentItem = this.props.item;\n      currentItem.description = this.refs.item_description_textfield.value;\n      currentItem.assigned_to = this.refs.assigned_to_textfield.value;\n      currentItem.due_date = this.refs.due_date_dropdown.value;\n      currentItem.completed = this.refs.completed_checkbox.value;\n      this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n        items: this.props.firestore.FieldValue.arrayUnion(this.props.item)\n      });\n      console.log(\"Updating the item\");\n    };\n  }\n\n  render() {\n    const item = this.props.item;\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"div\", {\n      id: \"item_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"description_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: item.description,\n      ref: \"item_description_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"assigned_to_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"assigned_to_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Assigned To:\"), React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: item.assigned_to,\n      ref: \"assigned_to_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"due_date_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"due_date_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Due Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      defaultValue: item.due_date,\n      ref: \"due_date_dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"completed_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"completed_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(Checkbox, {\n      defaultChecked: item.completed,\n      ref: \"completed_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_submit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"list_submit_list\",\n      onClick: this.submitItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/todoList/' + this.props.todoList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"button\", {\n      id: \"list_cancel_submit_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/todoList/' + this.props.todoList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cancel\")))); // if (this.props.currentItem) {\n    //     let itemToLoad = this.props.currentItem;\n    //     return (\n    // <div id='todo_item'>\n    //     <div id=\"item_container\">Item</div>\n    //     <div id=\"item_name_container\" class=\"text_toolbar\">\n    //         <span id=\"description_prompt\">Description:</span>\n    //         <input type=\"text\" defaultValue={itemToLoad.description} id=\"item_description_textfield\" />\n    //     </div>\n    //     <div id=\"assigned_to_container\" class=\"text_toolbar\">\n    //         <span id=\"assigned_to_prompt\">Assigned To:</span>\n    //         <input type=\"text\" defaultValue={itemToLoad.assigned_to} id=\"assigned_to_textfield\" />\n    //     </div>\n    //     <div id=\"due_date_container\" class=\"text_toolbar\">\n    //         <span id=\"due_date_prompt\">Due Date:</span>\n    //         <input type=\"date\" defaultValue={itemToLoad.due_date} id=\"due_date_dropdown\" />\n    //     </div>\n    //     <div id=\"completed_container\" class=\"text_toolbar\">\n    //         <span id=\"completed_prompt\">Completed:</span>\n    //         <input type=\"checkbox\" defaultChecked={itemToLoad.completed} id=\"completed_checkbox\" />\n    //     </div>\n    //     <div id=\"list_submit_buttons\">\n    //         <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n    //         <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n    //     </div>\n    // </div>\n    //     )\n    // }\n    // else {\n    //     return (\n    //         <div id='todo_item'>\n    //             <div id=\"item_container\">Item</div>\n    //             <div id=\"item_name_container\" class=\"text_toolbar\">\n    //                 <span id=\"description_prompt\">Description:</span>\n    //                 <input type=\"text\" defaultValue={\"\"} id=\"item_description_textfield\" />\n    //             </div>\n    //             <div id=\"assigned_to_container\" class=\"text_toolbar\">\n    //                 <span id=\"assigned_to_prompt\">Assigned To:</span>\n    //                 <input type=\"text\" defaultValue={\"\"} id=\"assigned_to_textfield\" />\n    //             </div>\n    //             <div id=\"due_date_container\" class=\"text_toolbar\">\n    //                 <span id=\"due_date_prompt\">Due Date:</span>\n    //                 <input type=\"date\" defaultValue={\"\"} id=\"due_date_dropdown\" />\n    //             </div>\n    //             <div id=\"completed_container\" class=\"text_toolbar\">\n    //                 <span id=\"completed_prompt\">Completed:</span>\n    //                 <input type=\"checkbox\" defaultChecked={false} id=\"completed_checkbox\" />\n    //             </div>\n    //             <div id=\"list_submit_buttons\">\n    //                 <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n    //                 <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todoLists = state.firestore.data.todoLists;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n  const itemNum = ownProps.match.params.key;\n  const item = todoList.items[itemNum];\n  console.log('itemNum: ' + itemNum);\n  console.log('item:' + item);\n  return {\n    itemNum,\n    todoList,\n    item,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ItemScreen);","map":{"version":3,"sources":["/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/item_screen/ItemScreen.js"],"names":["React","Component","connect","compose","firestoreConnect","Checkbox","Link","ItemScreen","submitItemChanges","currentItem","props","item","description","refs","item_description_textfield","value","assigned_to","assigned_to_textfield","due_date","due_date_dropdown","completed","completed_checkbox","firestore","collection","doc","todoList","id","update","items","FieldValue","arrayUnion","console","log","render","mapStateToProps","state","ownProps","match","params","todoLists","data","itemNum","key","auth","firebase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport {Checkbox} from 'react-materialize';\nimport { Link } from 'react-router-dom';\n\nexport class ItemScreen extends Component {\n    submitItemChanges = () => {\n\n        var currentItem = this.props.item;\n\n        currentItem.description = this.refs.item_description_textfield.value;\n        currentItem.assigned_to = this.refs.assigned_to_textfield.value;\n        currentItem.due_date = this.refs.due_date_dropdown.value;\n        currentItem.completed = this.refs.completed_checkbox.value;\n\n\n        this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n            items: this.props.firestore.FieldValue.arrayUnion(this.props.item)\n        });\n        console.log(\"Updating the item\");\n    }\n\n    render() {\n        const item = this.props.item;\n        return (\n            <div id='todo_item'>\n                <div id=\"item_container\">Item</div>\n                <div id=\"item_name_container\" className=\"text_toolbar\">\n                    <span id=\"description_prompt\">Description:</span>\n                    <input type=\"text\" defaultValue={item.description} ref=\"item_description_textfield\" />\n                </div>\n                <div id=\"assigned_to_container\" className=\"text_toolbar\">\n                    <span id=\"assigned_to_prompt\">Assigned To:</span>\n                    <input type=\"text\" defaultValue={item.assigned_to} ref=\"assigned_to_textfield\" />\n                </div>\n                <div id=\"due_date_container\" className=\"text_toolbar\">\n                    <span id=\"due_date_prompt\">Due Date:</span>\n                    <input type=\"date\" defaultValue={item.due_date} ref=\"due_date_dropdown\" />\n                </div>\n                <div id=\"completed_container\" className=\"text_toolbar\">\n                    <span id=\"completed_prompt\">Completed:</span>\n                        <Checkbox defaultChecked={item.completed} ref=\"completed_checkbox\" />\n                    \n                </div>\n                <div id=\"list_submit_buttons\">\n                    <button id=\"list_submit_list\" onClick={this.submitItemChanges}><Link to={'/todoList/' + this.props.todoList.id}>Submit</Link></button>\n                    <button id=\"list_cancel_submit_list\"><Link to={'/todoList/' + this.props.todoList.id}>Cancel</Link></button>\n                </div>\n            </div>\n        )\n        // if (this.props.currentItem) {\n        //     let itemToLoad = this.props.currentItem;\n        //     return (\n        // <div id='todo_item'>\n        //     <div id=\"item_container\">Item</div>\n        //     <div id=\"item_name_container\" class=\"text_toolbar\">\n        //         <span id=\"description_prompt\">Description:</span>\n        //         <input type=\"text\" defaultValue={itemToLoad.description} id=\"item_description_textfield\" />\n        //     </div>\n        //     <div id=\"assigned_to_container\" class=\"text_toolbar\">\n        //         <span id=\"assigned_to_prompt\">Assigned To:</span>\n        //         <input type=\"text\" defaultValue={itemToLoad.assigned_to} id=\"assigned_to_textfield\" />\n        //     </div>\n        //     <div id=\"due_date_container\" class=\"text_toolbar\">\n        //         <span id=\"due_date_prompt\">Due Date:</span>\n        //         <input type=\"date\" defaultValue={itemToLoad.due_date} id=\"due_date_dropdown\" />\n        //     </div>\n        //     <div id=\"completed_container\" class=\"text_toolbar\">\n        //         <span id=\"completed_prompt\">Completed:</span>\n        //         <input type=\"checkbox\" defaultChecked={itemToLoad.completed} id=\"completed_checkbox\" />\n        //     </div>\n        //     <div id=\"list_submit_buttons\">\n        //         <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n        //         <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n        //     </div>\n        // </div>\n        //     )\n        // }\n        // else {\n        //     return (\n        //         <div id='todo_item'>\n        //             <div id=\"item_container\">Item</div>\n        //             <div id=\"item_name_container\" class=\"text_toolbar\">\n        //                 <span id=\"description_prompt\">Description:</span>\n        //                 <input type=\"text\" defaultValue={\"\"} id=\"item_description_textfield\" />\n        //             </div>\n        //             <div id=\"assigned_to_container\" class=\"text_toolbar\">\n        //                 <span id=\"assigned_to_prompt\">Assigned To:</span>\n        //                 <input type=\"text\" defaultValue={\"\"} id=\"assigned_to_textfield\" />\n        //             </div>\n        //             <div id=\"due_date_container\" class=\"text_toolbar\">\n        //                 <span id=\"due_date_prompt\">Due Date:</span>\n        //                 <input type=\"date\" defaultValue={\"\"} id=\"due_date_dropdown\" />\n        //             </div>\n        //             <div id=\"completed_container\" class=\"text_toolbar\">\n        //                 <span id=\"completed_prompt\">Completed:</span>\n        //                 <input type=\"checkbox\" defaultChecked={false} id=\"completed_checkbox\" />\n        //             </div>\n        //             <div id=\"list_submit_buttons\">\n        //                 <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n        //                 <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n        //             </div>\n        //         </div>\n        //     )\n        // }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    todoList.id = id;\n    const itemNum = ownProps.match.params.key;\n    const item = todoList.items[itemNum]\n\n    console.log('itemNum: ' + itemNum)\n    console.log('item:' + item)\n\n\n    return {\n        itemNum,\n        todoList,\n        item,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemScreen);"]},"metadata":{},"sourceType":"module"}