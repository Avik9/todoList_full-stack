{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/home_screen/HomeScreen.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks';\n\nclass HomeScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewList = () => {\n      var todoList = {\n        items: [],\n        name: '(No Name)',\n        owner: '(No Owner)'\n      };\n      this.props.firestore.collection('todoLists').add(todoList).then(ref => {\n        this.props.history.push('/todoList/' + ref.id);\n      });\n    };\n\n    this.updateTimeStamp = id => {\n      this.props.firestore.collection('todoLists').doc(id).update({\n        timestamp: this.props.firestore.FieldValue.serverTimestamp()\n      });\n    };\n  }\n\n  render() {\n    if (!this.props.auth.uid) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col m4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(TodoListLinks, {\n      updateTime: this.updateTimeStamp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"@todo\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), \"List Maker\"), React.createElement(\"div\", {\n      className: \"home_new_list_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"home_new_list_button\",\n      onClick: this.handleNewList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Create a New To Do List\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(HomeScreen);","map":{"version":3,"sources":["/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/home_screen/HomeScreen.js"],"names":["React","Component","connect","compose","NavLink","Redirect","firestoreConnect","TodoListLinks","HomeScreen","handleNewList","todoList","items","name","owner","props","firestore","collection","add","then","ref","history","push","id","updateTimeStamp","doc","update","timestamp","FieldValue","serverTimestamp","render","auth","uid","mapStateToProps","state","firebase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CACA;AAAA;AAAA;;AAAA,SACIQ,aADJ,GACoB,MAChB;AACI,UAAIC,QAAQ,GAAG;AACXC,QAAAA,KAAK,EAAE,EADI;AAEXC,QAAAA,IAAI,EAAE,WAFK;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAAf;AAKA,WAAKC,KAAL,CAAWC,SAAX,CAAqBC,UAArB,CAAgC,WAAhC,EAA6CC,GAA7C,CAAiDP,QAAjD,EAA2DQ,IAA3D,CAAgEC,GAAG,IAC/D;AACI,aAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,eAAeF,GAAG,CAACG,EAA3C;AACH,OAHL;AAIH,KAZL;;AAAA,SAcIC,eAdJ,GAcuBD,EAAD,IAAQ;AAClB,WAAKR,KAAL,CAAWC,SAAX,CAAqBC,UAArB,CAAgC,WAAhC,EAA6CQ,GAA7C,CAAiDF,EAAjD,EAAqDG,MAArD,CAA4D;AACxDC,QAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,SAAX,CAAqBY,UAArB,CAAgCC,eAAhC;AAD6C,OAA5D;AAGH,KAlBT;AAAA;;AAoBIC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKf,KAAL,CAAWgB,IAAX,CAAgBC,GAArB,EAA0B;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAAKR,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,eADJ,EAMI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,KAAKd,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CANJ,CALJ,CADJ,CADJ;AAsBH;;AA/CL;;AAkDA,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,IAAI,EAAEG,KAAK,CAACC,QAAN,CAAeJ;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAe3B,OAAO,CAClBD,OAAO,CAAC8B,eAAD,CADW,EAElB1B,gBAAgB,CAAC,CACb;AAAEU,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKbR,UALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks'\n\nclass HomeScreen extends Component \n{\n    handleNewList = () => \n    {\n        var todoList = {\n            items: [],\n            name: '(No Name)',\n            owner: '(No Owner)',\n        }\n        this.props.firestore.collection('todoLists').add(todoList).then(ref => \n            {\n                this.props.history.push('/todoList/' + ref.id);\n            });\n    }\n\n    updateTimeStamp = (id) => {\n            this.props.firestore.collection('todoLists').doc(id).update({\n                timestamp: this.props.firestore.FieldValue.serverTimestamp(),\n            });\n        };\n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"dashboard\">\n                <div className=\"row\">\n                    <div className=\"col m4\">\n                        <TodoListLinks updateTime={this.updateTimeStamp}/>\n                    </div>\n\n                    <div className=\"col s8\">\n                        <div className=\"banner\">\n                            @todo<br />\n                            List Maker\n                        </div>\n\n                        <div className=\"home_new_list_container\">\n                            <button className=\"home_new_list_button\" onClick={this.handleNewList}>\n                                Create a New To Do List\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(HomeScreen);"]},"metadata":{},"sourceType":"module"}