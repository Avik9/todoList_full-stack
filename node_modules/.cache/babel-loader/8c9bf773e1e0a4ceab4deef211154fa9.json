{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Checkbox } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitItemChanges = () => {\n      var currentItem = this.props.item;\n      currentItem.description = this.refs.item_description_textfield.value;\n      currentItem.assigned_to = this.refs.assigned_to_textfield.value;\n      currentItem.due_date = this.refs.due_date_dropdown.value;\n      currentItem.completed = this.refs.completed_checkbox.value; // this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n      //     items: this.props.firestore.FieldValue.arrayUnion(currentItem)\n      // });\n\n      console.log(this.props.firestore.collection('todoLists').where('key', '==', currentItem.key).get());\n    };\n\n    this.createListItemCard = () => {\n      var newCard = {\n        description: this.refs.item_description_textfield.value,\n        assigned_to: this.refs.assigned_to_textfield.value,\n        due_date: this.refs.due_date_dropdown.value,\n        completed: this.refs.completed_checkbox.value\n      };\n\n      if (newCard.description === '') {\n        newCard.description = 'No Description';\n      }\n\n      if (newCard.assigned_to === '') {\n        newCard.assigned_to = 'Not Assigned';\n      }\n\n      this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n        items: this.props.firestore.FieldValue.arrayUnion(newCard)\n      });\n    };\n  }\n\n  render() {\n    const item = this.props.item;\n\n    if (item) {\n      return React.createElement(\"div\", {\n        id: \"todo_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"item_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"div\", {\n        id: \"item_name_container\",\n        className: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"description_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: item.description,\n        ref: \"item_description_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"assigned_to_container\",\n        className: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"assigned_to_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Assigned To:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: item.assigned_to,\n        ref: \"assigned_to_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"due_date_container\",\n        className: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"due_date_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Due Date:\"), React.createElement(\"input\", {\n        type: \"date\",\n        defaultValue: item.due_date,\n        ref: \"due_date_dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"completed_container\",\n        className: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"completed_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Completed:\"), React.createElement(Checkbox, {\n        defaultChecked: item.completed,\n        ref: \"completed_checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"list_submit_buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"list_submit_list\",\n        onClick: this.submitItemChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/todoList/' + this.props.todoList.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"button\", {\n        id: \"list_cancel_submit_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/todoList/' + this.props.todoList.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Cancel\"))));\n    } else {\n      return React.createElement(\"div\", {\n        id: \"todo_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"item_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"div\", {\n        id: \"item_name_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"description_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: \"\",\n        ref: \"item_description_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"assigned_to_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"assigned_to_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Assigned To:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: \"\",\n        ref: \"assigned_to_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"due_date_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"due_date_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Due Date:\"), React.createElement(\"input\", {\n        type: \"date\",\n        defaultValue: \"\",\n        ref: \"due_date_dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"completed_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"completed_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Completed:\"), React.createElement(Checkbox, {\n        defaultChecked: false,\n        ref: \"completed_checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"list_submit_buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"list_submit_list\",\n        onClick: this.createListItemCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/todoList/' + this.props.todoList.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"button\", {\n        id: \"list_cancel_submit_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/todoList/' + this.props.todoList.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const todoLists = state.firestore.data.todoLists;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n  const itemNum = ownProps.match.params.key;\n  const item = todoList.items[itemNum];\n  console.log('itemNum: ' + itemNum);\n  console.log('item:' + item);\n  return {\n    itemNum,\n    todoList,\n    item,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ItemScreen);","map":{"version":3,"sources":["/Users/avik/Desktop/AVIK/SBU/Junior Year/Fall 2019/CSE 316/Homework 3/todo_hw3/src/components/item_screen/ItemScreen.js"],"names":["React","Component","connect","compose","firestoreConnect","Checkbox","Link","ItemScreen","submitItemChanges","currentItem","props","item","description","refs","item_description_textfield","value","assigned_to","assigned_to_textfield","due_date","due_date_dropdown","completed","completed_checkbox","console","log","firestore","collection","where","key","get","createListItemCard","newCard","doc","todoList","id","update","items","FieldValue","arrayUnion","render","mapStateToProps","state","ownProps","match","params","todoLists","data","itemNum","auth","firebase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Checkbox } from 'react-materialize';\nimport { Link } from 'react-router-dom';\n\nexport class ItemScreen extends Component {\n    submitItemChanges = () => {\n\n        var currentItem = this.props.item;\n\n        currentItem.description = this.refs.item_description_textfield.value;\n        currentItem.assigned_to = this.refs.assigned_to_textfield.value;\n        currentItem.due_date = this.refs.due_date_dropdown.value;\n        currentItem.completed = this.refs.completed_checkbox.value;\n\n        // this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n        //     items: this.props.firestore.FieldValue.arrayUnion(currentItem)\n        // });\n\n        console.log(this.props.firestore.collection('todoLists').where('key', '==', currentItem.key).get());\n    }\n\n    createListItemCard = () => {\n        var newCard = {\n            description: this.refs.item_description_textfield.value,\n            assigned_to: this.refs.assigned_to_textfield.value,\n            due_date: this.refs.due_date_dropdown.value,\n            completed: this.refs.completed_checkbox.value,\n\n        }\n\n        if(newCard.description === '')\n        {\n            newCard.description = 'No Description';\n        }\n\n        if(newCard.assigned_to === '')\n        {\n            newCard.assigned_to = 'Not Assigned';\n        }\n\n        this.props.firestore.collection('todoLists').doc(this.props.todoList.id).update({\n            items: this.props.firestore.FieldValue.arrayUnion(newCard)\n        });\n    }\n\n    render() {\n        const item = this.props.item;\n\n        if (item) {\n            return (\n                <div id='todo_item'>\n                    <div id=\"item_container\">Item</div>\n                    <div id=\"item_name_container\" className=\"text_toolbar\">\n                        <span id=\"description_prompt\">Description:</span>\n                        <input type=\"text\" defaultValue={item.description} ref=\"item_description_textfield\" />\n                    </div>\n                    <div id=\"assigned_to_container\" className=\"text_toolbar\">\n                        <span id=\"assigned_to_prompt\">Assigned To:</span>\n                        <input type=\"text\" defaultValue={item.assigned_to} ref=\"assigned_to_textfield\" />\n                    </div>\n                    <div id=\"due_date_container\" className=\"text_toolbar\">\n                        <span id=\"due_date_prompt\">Due Date:</span>\n                        <input type=\"date\" defaultValue={item.due_date} ref=\"due_date_dropdown\" />\n                    </div>\n                    <div id=\"completed_container\" className=\"text_toolbar\">\n                        <span id=\"completed_prompt\">Completed:</span>\n                        <Checkbox defaultChecked={item.completed} ref=\"completed_checkbox\" />\n\n                    </div>\n                    <div id=\"list_submit_buttons\">\n                        <button id=\"list_submit_list\" onClick={this.submitItemChanges}><Link to={'/todoList/' + this.props.todoList.id}>Submit</Link></button>\n                        <button id=\"list_cancel_submit_list\"><Link to={'/todoList/' + this.props.todoList.id}>Cancel</Link></button>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div id='todo_item'>\n                    <div id=\"item_container\">Item</div>\n                    <div id=\"item_name_container\" class=\"text_toolbar\">\n                        <span id=\"description_prompt\">Description:</span>\n                        <input type=\"text\" defaultValue={\"\"} ref=\"item_description_textfield\" />\n                    </div>\n                    <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                        <span id=\"assigned_to_prompt\">Assigned To:</span>\n                        <input type=\"text\" defaultValue={\"\"} ref=\"assigned_to_textfield\" />\n                    </div>\n                    <div id=\"due_date_container\" class=\"text_toolbar\">\n                        <span id=\"due_date_prompt\">Due Date:</span>\n                        <input type=\"date\" defaultValue={\"\"} ref=\"due_date_dropdown\" />\n                    </div>\n                    <div id=\"completed_container\" class=\"text_toolbar\">\n                        <span id=\"completed_prompt\">Completed:</span>\n                        <Checkbox defaultChecked={false} ref=\"completed_checkbox\" />\n                    </div>\n                    <div id=\"list_submit_buttons\">\n                        <button id=\"list_submit_list\" onClick={this.createListItemCard}><Link to={'/todoList/' + this.props.todoList.id}>Submit</Link></button>\n                        <button id=\"list_cancel_submit_list\"><Link to={'/todoList/' + this.props.todoList.id}>Cancel</Link></button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    todoList.id = id;\n    const itemNum = ownProps.match.params.key;\n    const item = todoList.items[itemNum]\n\n    console.log('itemNum: ' + itemNum)\n    console.log('item:' + item)\n\n\n    return {\n        itemNum,\n        todoList,\n        item,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemScreen);"]},"metadata":{},"sourceType":"module"}